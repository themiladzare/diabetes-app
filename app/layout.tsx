import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "سپید",
  description: 'سامانه پایش یزد دیابت',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" dir="rtl">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* {children} */}
        {/* <div className="relative isolate px-6 pt-14 lg:px-8"> */}
          {/* <div
            aria-hidden="true"
            className="absolute inset-x-0 -top-40 -z-10 transform-gpu overflow-hidden blur-3xl sm:-top-80"
          >
            <div
              style={{
                clipPath:
                  "polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)",
              }}
              className="relative left-[calc(50%-11rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-[#0056b3] to-[#007BFF] opacity-30 sm:left-[calc(50%-30rem)] sm:w-[72.1875rem]"
            />
          </div> */}
          {/* <div className="mx-auto max-w-2xl py-32 sm:py-48 lg:py-56"></div> */}
          
          {/* <div className="mx-auto max-w-4xl py-4 sm:py-8 lg:py-16"> */}
            {children}
          {/* </div> */}
          {/* <div
            aria-hidden="true"
            className="absolute inset-x-0 top-[calc(100%-13rem)] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[calc(100%-30rem)]"
          >
            <div
              style={{
                clipPath:
                  "polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)",
              }}
              className="relative left-[calc(50%+3rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 bg-gradient-to-tr from-[#0056b3] to-[#007BFF] opacity-30 sm:left-[calc(50%+36rem)] sm:w-[72.1875rem]"
            />
          </div> */}
        {/* </div> */}
      </body>
    </html>
  );
}

// import type { Metadata } from "next";
// import localFont from "next/font/local";
// import "./globals.css";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });

// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="fa" dir="rtl">
//       <head>
//         <style>{`
//           body, html {
//             margin: 0;
//             padding: 0;
//             height: 100%;
//             overflow: hidden;
//             // background-color: #f3f4f6; /* Lighter background */
//           }
//           .background {
//             position: fixed;
//             top: 0;
//             left: 0;
//             width: 100%;
//             height: 100%;
//             z-index: -1;
//           }
//           * {
//             border: none !important;
//             outline: none !important;
//           }
//         `}</style>
//       </head>
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         <svg className="background" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" preserveAspectRatio="xMidYMid slice">
//           <defs>
//             <pattern id="smallGrid" width="10" height="10" patternUnits="userSpaceOnUse">
//               <path d="M 10 0 L 0 0 0 10" fill="none" stroke="#d1d5db" stroke-width="0.5"/>
//             </pattern>
//             <pattern id="grid" width="50" height="50" patternUnits="userSpaceOnUse">
//               <rect width="50" height="50" fill="url(#smallGrid)"/>
//               <path d="M 50 0 L 0 0 0 50" fill="none" stroke="#9ca3af" stroke-width="1"/>
//             </pattern>
//             <pattern id="dots" width="20" height="20" patternUnits="userSpaceOnUse">
//               <circle cx="10" cy="10" r="2" fill="#4b5563" />
//               <circle cx="0" cy="0" r="1" fill="#6b7280" />
//               <circle cx="0" cy="20" r="1" fill="#6b7280" />
//               <circle cx="20" cy="0" r="1" fill="#6b7280" />
//               <circle cx="20" cy="20" r="1" fill="#6b7280" />
//             </pattern>
//             <path id="wave" d="M0,100 C150,200 350,0 500,100 C650,200 850,0 1000,100 L1000,1000 L0,1000 Z" />
//           </defs>
//           <rect width="100%" height="100%" fill="#f3f4f6" />
//           <rect width="100%" height="100%" fill="url(#grid)" opacity="0.7" />
//           <rect width="100%" height="100%" fill="url(#dots)" opacity="0.9" />
//           <use href="#wave" fill="#e5e7eb" opacity="0.7" />
//           <use href="#wave" fill="#d1d5db" opacity="0.6" y="50" />
//         </svg>

//         <div style={{padding: "20px", color: "#1f2937"}}>
//           {children}
//         </div>
//       </body>
//     </html>
//   );
// }
